==677== Memcheck, a memory error detector
==677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==677== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==677== Command: /mnt/c/Users/Limbo/Documents/Shell-Project/quash
==677== 
==677== error calling PR_SET_PTRACER, vgdb might block
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 375): run_script()
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
==801== 
==801== HEAP SUMMARY:
==801==     in use at exit: 0 bytes in 0 blocks
==801==   total heap usage: 10 allocs, 10 frees, 20,090 bytes allocated
==801== 
==801== All heap blocks were freed -- no leaks are possible
==801== 
==801== For counts of detected and suppressed errors, rerun with: -v
==801== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 375): run_script()
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
==808== 
==808== HEAP SUMMARY:
==808==     in use at exit: 0 bytes in 0 blocks
==808==   total heap usage: 18 allocs, 18 frees, 23,978 bytes allocated
==808== 
==808== All heap blocks were freed -- no leaks are possible
==808== 
==808== For counts of detected and suppressed errors, rerun with: -v
==808== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 375): run_script()
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 375): run_script()
input in flex scanner failed
==813== 
==813== HEAP SUMMARY:
==813==     in use at exit: 0 bytes in 0 blocks
==813==   total heap usage: 27 allocs, 27 frees, 27,903 bytes allocated
==813== 
==813== All heap blocks were freed -- no leaks are possible
==813== 
==813== For counts of detected and suppressed errors, rerun with: -v
==813== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==677== 
==677== HEAP SUMMARY:
==677==     in use at exit: 0 bytes in 0 blocks
==677==   total heap usage: 42 allocs, 42 frees, 35,606 bytes allocated
==677== 
==677== All heap blocks were freed -- no leaks are possible
==677== 
==677== For counts of detected and suppressed errors, rerun with: -v
==677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==818== 
==818== HEAP SUMMARY:
==818==     in use at exit: 0 bytes in 0 blocks
==818==   total heap usage: 34 allocs, 34 frees, 31,775 bytes allocated
==818== 
==818== All heap blocks were freed -- no leaks are possible
==818== 
==818== For counts of detected and suppressed errors, rerun with: -v
==818== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
