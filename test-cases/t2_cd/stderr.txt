==633== Memcheck, a memory error detector
==633== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==633== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==633== Command: /mnt/c/Users/Limbo/Documents/Shell-Project/quash
==633== 
==633== error calling PR_SET_PTRACER, vgdb might block
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 375): run_script()
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
==779== 
==779== HEAP SUMMARY:
==779==     in use at exit: 0 bytes in 0 blocks
==779==   total heap usage: 11 allocs, 11 frees, 24,186 bytes allocated
==779== 
==779== All heap blocks were freed -- no leaks are possible
==779== 
==779== For counts of detected and suppressed errors, rerun with: -v
==779== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 375): run_script()
IMPLEMENT ME: src/execute.c(line 56): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 375): run_script()
input in flex scanner failed
==633== 
==633== HEAP SUMMARY:
==633==     in use at exit: 0 bytes in 0 blocks
==633==   total heap usage: 33 allocs, 33 frees, 35,831 bytes allocated
==633== 
==633== All heap blocks were freed -- no leaks are possible
==633== 
==633== For counts of detected and suppressed errors, rerun with: -v
==633== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==794== 
==794== HEAP SUMMARY:
==794==     in use at exit: 0 bytes in 0 blocks
==794==   total heap usage: 27 allocs, 27 frees, 32,039 bytes allocated
==794== 
==794== All heap blocks were freed -- no leaks are possible
==794== 
==794== For counts of detected and suppressed errors, rerun with: -v
==794== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==786== 
==786== HEAP SUMMARY:
==786==     in use at exit: 0 bytes in 0 blocks
==786==   total heap usage: 20 allocs, 20 frees, 28,167 bytes allocated
==786== 
==786== All heap blocks were freed -- no leaks are possible
==786== 
==786== For counts of detected and suppressed errors, rerun with: -v
==786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
